{
  "name": "my-button",
  "type": "components:ui",
  "description": "A customizable my-button component.",
  "dependencies": [
    "react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "components/my-button.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface MyButtonProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'secondary';\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst MyButton = React.forwardRef<HTMLDivElement, MyButtonProps>(\n  ({ className, variant = 'default', size = 'md', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          // Base styles\n          'inline-flex items-center justify-center rounded-md font-medium transition-colors',\n          'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring',\n          'disabled:pointer-events-none disabled:opacity-50',\n          // Variants\n          {\n            'bg-primary text-primary-foreground hover:bg-primary/90': variant === 'default',\n            'bg-secondary text-secondary-foreground hover:bg-secondary/80': variant === 'secondary',\n          },\n          // Sizes\n          {\n            'h-8 px-3 text-sm': size === 'sm',\n            'h-10 px-4': size === 'md',\n            'h-12 px-6 text-lg': size === 'lg',\n          },\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\n\nMyButton.displayName = 'MyButton';\n\nexport { MyButton };\n",
      "type": "components:ui"
    }
  ]
}